  <!doctype html>
  <html>
  <head>
    <meta charset="utf-8">
    <title>CFSlab Welcome!</title>
    <link rel=stylesheet type=text/css href="[% css_url %]">
  </head>
  <body>
    <div id="header">

    </div>
    
        [% IF not session.logged_in %]
        <h1>The Doors of CFSlab, Lord of Food-chain. Speak, friend, and enter</h1>
        
        [% ELSE %]
        <h1> Welcome to the Fellowship of Bacteria </h1>
        [% END %]
        <table>
        <tr valign="top">
        <td>
        <div id="content" style="width: 800px; height: 300px; overflow: scroll">
            <ul>
            <li> login status will stay for 1 hour (changeable).</li>
            
            <li> “myPlasmids” and “myStrains” are the entries with Keeper field matching to your login username.</li>
            
            <li> When you try to add an entry, it will automatically assign a CFS number to the new entry.</li>
            
            <li> Antibiotic and species abbreviations can be configured through Antibiotic.yml and Species.yml.</li>
            
            <li> Entries cannot be deleted, but can be marked as obsolete (by clicking “sabotage”). Once it is obsolete, the entry won’t appear in the search result. However, you cannot recycle the CFS ID for another plasmid/strain entry, and you cannot add an entry with the same plasmid/strain’s name. Due to the same reason, you cannot change the plasmid/strain’s name once it is in the database. Put it in another word, CFS ID is permanently bound to its plasmid/strain’s name once it is set! If something’s wrong with it? Ask the database’s admin.
            <b>Note:</b> it is always good to give your reasons in the “comments” field when you decide to “sabotage” the entry.</li>
            
            <li> It is currently possible to “revive” an entry. But I am considering to deprecate this function.</li>
            
            <li> It can remember the case of your input. But the search is case insensitive, which is convenient. Also, if you have a record named pET22b, and you try to add another one called pet22B, it won’t allow you to do so.</li>
            
            <li> Plasmid’s carriers are not editable. The field is usually modified by the changes in the strain database. Keeper check is ignored at the Plasmid database end. Deleting or adding a plasmid in the Strain database will change the corresponding field in the Plasmid database.</li>
            
            <li>  If you try to add a plasmid into a strain entry, and that plasmid is not already in the Plasmid database, you will fail. Try to add the plasmid in the database first before you do this please.</li>
            
            <li>  When you add an entry, and it has a parent (parent must be already in the database for you to do so), you can type it in. Once you’ve done this, some of the fields will be pre-filled to ease your pain of form-panicking.</li>
            
            <li>  Strain’s species info has to match with the species info of its parent. Otherwise any modification will fail miserably.</li>
            
            <li>  You can edit in batch the reference field, like when a paper is published and then change the ref field of a group of plasmids/strains.</li>
            
            <li>  Provide function for mass owner transfer. Change owners will push previous one into the “previous owner” field, delimited with a pipe ‘|’. It also adds the time when this change happens.</li>
            
            <li>  Daughter field is not changeable, can only get updated from daughter’s parent field (same as carrier-plasmid logic).</li>
            
            <li>  Family tree (tree of life) for plasmids and strains, with construction info shown when hovering mouse over node.</li>
            
            <li>  Provide garbage ground where all obsolete records are pooled. This can be secretly accessed via ‘/plasmid/obsolete’ for plasmid dumps and ‘/strain/obsolete’ for strain dumps.</li>
            
            <li>  You can search in batch with ID or names.</li>
            
            <li>  Change species of a root parent will change the species field of all its offspring. In fact, this is the only way to change any daughter’s species field.</li>
            
            <li>  It can export list to excel sheet.</li>
            
            <li>  Customise fields to display on the list. p_list and s_list are stored in the user database, delimited by ‘,’.</li>
            
            <li>  You can add plasmid/strain records in batch.</li>
            </ul>
        </div>
        </td>
        <td>

       <div id="">
        <ul id="sidebar">
        [% IF not session.logged_in %]
        <li><a href="[% login_url %]">log in</a></li>
        [% ELSE %]
        
         <li><a href="[% plasmid %]">All plasmids</a></li>
         <li> <a href="[% my_plasmids %]">myPlasmids</a></li> 
         <li> <a href="[% strain %]">All strains</a></li> 
         <li> <a href="[% my_strains %]">myStrains</a></li> 
         <li> <a href="[% mass_search %]">Mass search</a></li> 
         <li> <a href="[% mass_edit %]">Mass ref edit</a></li> 
         <li> <a href="[% change_keeper %]">Change keeper</a></li> 
         <li> <a href="[% logout_url %]">log out</a></li> 
       [% END %]
        </ul>
        </div>
        </td>
        </tr>
        </table>


  <div id="footer">
 <p>Powered by <a href="mailto:logust79@gmail.com?Subject=Database">Jing Yu</a><br>
 </p>
</div>

  </body>
  </html>
